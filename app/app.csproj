<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <AzureFunctionsVersion>v3</AzureFunctionsVersion>
    <OutputType>Exe</OutputType>
    <_FunctionsSkipCleanOutput>true</_FunctionsSkipCleanOutput>
    <UserSecretsId>7a887ced-9117-42be-8fb3-2ba1f8f9500e</UserSecretsId>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.Http" Version="3.0.12"/>
    <PackageReference Include="Microsoft.Azure.Functions.Worker.Sdk" Version="1.0.3" OutputItemType="Analyzer"/>
    <PackageReference Include="Microsoft.Azure.Functions.Worker" Version="1.1.0"/>
    <PackageReference Include="Stripe.net" Version="39.54.0"/>
    <PackageReference Include="Geocoding.Core" Version="4.0.1"/>
    <PackageReference Include="Geocoding.Google" Version="4.0.1"/>
    <PackageReference Include="Microsoft.AspNet.WebApi.Client" Version="5.2.7"/>
    <PackageReference Include="Microsoft.AspNetCore.Http.Features" Version="5.0.7"/>
    <PackageReference Include="Microsoft.Azure.Storage.Blob" Version="11.2.3"/>
    <PackageReference Include="Microsoft.Azure.Functions.Analyzers" Version="1.0.0"/>
    <PackageReference Include="Azure.Storage.Blobs" Version="12.9.0"/>
    <PackageReference Include="Microsoft.Azure.Core.NewtonsoftJson" Version="1.0.0"/>
    <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="6.0.0-preview.5.21301.5"/>
    <PackageReference Include="System.Net.NameResolution" Version="4.3.0"/>
    <PackageReference Include="Algolia.Search" Version="6.10.1"/>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1"/>
  </ItemGroup>
  <ItemGroup>
    <None Update="host.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="local.settings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </None>
  </ItemGroup>
  <Target Name="CopyRuntimes" AfterTargets="AfterBuild" Condition=" '$(OS)' == 'UNIX' ">
    <Exec Command="rm -rf $(OutDir)bin/runtimes/* &amp;&amp; mkdir -p $(OutDir)bin/runtimes &amp;&amp; cp -R $(OutDir)runtimes/* $(OutDir)bin/runtimes/"/>
  </Target>
</Project>